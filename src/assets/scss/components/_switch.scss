@use "sass:map";

/* @docs */
$switch-spacer: 0.5em !default;
$switch-width: 2.75em !default;
$switch-height: 1.5em !default;
/* @docs */

/* @bootstrap docs */
// $form-switch-color:               rgba($black, .25);
// $form-switch-width:               2em;
// $form-switch-padding-start:       $form-switch-width + .5em;
// $form-switch-bg-image:            url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color}'/></svg>");
// $form-switch-border-radius:       $form-switch-width;
// $form-switch-transition:          background-position .15s ease-in-out;

// $form-switch-focus-color:         $input-focus-border-color;
// $form-switch-focus-bg-image:      url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-focus-color}'/></svg>");

// $form-switch-checked-color:       $component-active-color;
// $form-switch-checked-bg-image:    url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-checked-color}'/></svg>");
// $form-switch-checked-bg-position: right center;
/* @bootstrap docs */

@function switchSVG($color, $svg, $replacement) {
  @return escape-svg(str-replace($svg, "#{$form-switch-color}", $color));
}

.form-switch {
  --#{$prefix}switch-spacer: #{$switch-spacer};
  --#{$prefix}switch-height: #{$switch-height};
  --#{$prefix}switch-width: #{$switch-width};

  position: relative;
  padding-left: 0;

  .form-check-input {
    height: var(--#{$prefix}switch-height);
    width: var(--#{$prefix}switch-width);
    margin: 0;
    cursor: pointer;

    &:not(:last-child) {
      margin-right: var(--#{$prefix}switch-spacer);
    }
  }

  // color variant
  @each $name, $color in $theme-colors {
    &.variant-#{$name} input[type="checkbox"] {
      background-color: transparent;
      border-color: var(--#{$prefix}#{$name});

      --#{$prefix}form-switch-bg: #{switchSVG(
          $color,
          $form-switch-bg-image,
          $form-switch-color
        )};

      &:checked {
        background-color: var(--#{$prefix}#{$name});
        --#{$prefix}form-switch-bg: #{switchSVG(
            $white,
            $form-switch-checked-bg-image,
            $form-switch-checked-color
          )};
      }
    }
  }

  // possive colors variant
  @each $name, $color in $theme-colors {
    &.variant-#{$name}-passive input[type="checkbox"] {
      background-color: var(--#{$prefix}#{$name});
      border-color: var(--#{$prefix}#{$name});

      --#{$prefix}form-switch-bg: #{switchSVG(
          $white,
          $form-switch-bg-image,
          $form-switch-color
        )};
    }
  }

  // subtle color variant
  @each $name, $color in $theme-colors {
    &.variant-#{$name}-subtle input[type="checkbox"] {
      $color: map.get($theme-colors-bg-subtle, #{$name});

      background-color: transparent;
      border-color: var(--#{$prefix}#{$name}-border-subtle);

      --#{$prefix}form-switch-bg: #{switchSVG(
          $color,
          $form-switch-bg-image,
          $form-switch-color
        )};

      &:checked {
        background-color: var(--#{$prefix}#{$name}-bg-subtle);
        --#{$prefix}form-switch-bg: #{switchSVG(
            $white,
            $form-switch-checked-bg-image,
            $form-switch-checked-color
          )};
      }
    }
  }

  &.reversed {
    display: flex;

    .form-check-input {
      order: 2;
      margin-left: var(--#{$prefix}switch-spacer);
    }

    .form-check-label {
      order: 1;
    }
  }
}
